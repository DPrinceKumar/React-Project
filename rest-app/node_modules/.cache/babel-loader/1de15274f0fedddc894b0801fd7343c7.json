{"ast":null,"code":"var _jsxFileName = \"/Users/princekumar/Desktop/web devlopment /Com-React-2022/rest-app/src/component/toDoList/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"./style.css\"; // get the localStorage data back\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalData = () => {\n  const lists = localStorage.getItem(\"mytodolist\");\n\n  if (lists) {\n    return JSON.parse(lists);\n  } else {\n    return [];\n  }\n};\n\nconst Todo = () => {\n  const [inputdata, setInputData] = useState(\"\");\n  const [items, setItems] = useState(getLocalData());\n  const [isEditItem, setIsEditItem] = useState(\"\");\n  const [toggleButton, setToggleButton] = useState(false); // add the items fucnction\n\n  const addItem = () => {\n    if (!inputdata) {\n      alert(\"plz fill the data\");\n    } else if (inputdata && toggleButton) {\n      setItems(items.map(curElem => {\n        if (curElem.id === isEditItem) {\n          return { ...curElem,\n            name: inputdata\n          };\n        }\n\n        return curElem;\n      }));\n      setInputData(\"\");\n      setIsEditItem(null);\n      setToggleButton(false);\n    } else {\n      const myNewInputData = {\n        id: new Date().getTime().toString(),\n        name: inputdata\n      };\n      setItems([...items, myNewInputData]);\n      setInputData(\"\");\n    }\n  }; //edit the items\n\n\n  const editItem = index => {\n    const item_todo_edited = items.find(curElem => {\n      return curElem.id === index;\n    });\n    setInputData(item_todo_edited.name);\n    setIsEditItem(index);\n    setToggleButton(true);\n  }; // how to delete items section\n\n\n  const deleteItem = index => {\n    const updatedItems = items.filter(curElem => {\n      return curElem.id !== index;\n    });\n    setItems(updatedItems);\n  }; // remove all the elements\n\n\n  const removeAll = () => {\n    setItems([]);\n  }; // adding localStorage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/todo.svg\",\n            alt: \"todologo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add Your List Here \\u270C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u270D Add Item\",\n            className: \"form-control\",\n            value: inputdata,\n            onChange: event => setInputData(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), \"console.log(in);\", toggleButton ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-edit add-btn\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add-btn\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(curElem => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: curElem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-edit add-btn\",\n                  onClick: () => editItem(curElem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-trash-alt add-btn\",\n                  onClick: () => deleteItem(curElem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, curElem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn effect04\",\n            \"data-sm-link-text\": \"Remove All\",\n            onClick: removeAll,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" CHECK LIST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/princekumar/Desktop/web devlopment /Com-React-2022/rest-app/src/component/toDoList/todo.js"],"names":["React","useState","useEffect","getLocalData","lists","localStorage","getItem","JSON","parse","Todo","inputdata","setInputData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","alert","map","curElem","id","name","myNewInputData","Date","getTime","toString","editItem","index","item_todo_edited","find","deleteItem","updatedItems","filter","removeAll","setItem","stringify","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport \"./style.css\"\n\n// get the localStorage data back\nconst getLocalData = () => {\n  const lists = localStorage.getItem(\"mytodolist\");\n\n  if (lists) {\n    return JSON.parse(lists);\n  } else {\n    return [];\n  }\n};\n\nconst Todo = () => {\n    const [inputdata, setInputData] = useState(\"\");\n  const [items, setItems] = useState(getLocalData());\n  const [isEditItem, setIsEditItem] = useState(\"\");\n  const [toggleButton, setToggleButton] = useState(false);\n\n  // add the items fucnction\n  const addItem = () => {\n    if (!inputdata) {\n      alert(\"plz fill the data\");\n    } else if (inputdata && toggleButton) {\n      setItems(\n        items.map((curElem) => {\n          if (curElem.id === isEditItem) {\n            return { ...curElem, name: inputdata };\n          }\n          return curElem;\n        })\n      );\n\n      setInputData(\"\");\n      setIsEditItem(null);\n      setToggleButton(false);\n    } else {\n      const myNewInputData = {\n        id: new Date().getTime().toString(),\n        name: inputdata,\n      };\n      setItems([...items, myNewInputData]);\n      setInputData(\"\");\n    }\n  };\n  //edit the items\n  const editItem = (index) => {\n    const item_todo_edited = items.find((curElem) => {\n      return curElem.id === index;\n    });\n    setInputData(item_todo_edited.name);\n    setIsEditItem(index);\n    setToggleButton(true);\n  };\n\n  // how to delete items section\n  const deleteItem = (index) => {\n    const updatedItems = items.filter((curElem) => {\n      return curElem.id !== index;\n    });\n    setItems(updatedItems);\n  };\n\n  // remove all the elements\n  const removeAll = () => {\n    setItems([]);\n  };\n\n  // adding localStorage\n  useEffect(() => {\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\n  }, [items]);\n\n    return (\n        <>\n        <div className=\"main-div\">\n        <div className=\"child-div\">\n          <figure>\n            <img src=\"./images/todo.svg\" alt=\"todologo\" />\n            <figcaption>Add Your List Here ✌</figcaption>\n          </figure>\n          <div className=\"addItems\">\n            <input  type=\"text\" placeholder=\"✍ Add Item\" className=\"form-control\" value={inputdata}\n              onChange={(event) => setInputData(event.target.value)}    />\n\n              console.log(in);\n\n            {toggleButton ? (\n              <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\n            ) : (\n              <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\n            )}\n          </div>\n          {/* show our items  */}\n          <div className=\"showItems\">\n            {items.map((curElem) => {\n              return (\n                <div className=\"eachItem\" key={curElem.id}>\n                  <h3>{curElem.name}</h3>\n                  <div className=\"todo-btn\">\n                    <i\n                      className=\"far fa-edit add-btn\"\n                      onClick={() => editItem(curElem.id)}></i>\n                    <i\n                      className=\"far fa-trash-alt add-btn\"\n                      onClick={() => deleteItem(curElem.id)}></i>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* rmeove all button  */}\n          <div className=\"showItems\">\n            <button\n              className=\"btn effect04\"\n              data-sm-link-text=\"Remove All\"\n              onClick={removeAll}>\n              <span> CHECK LIST</span>\n            </button>\n          </div>\n        </div>\n      </div>\n        </>\n    )\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}