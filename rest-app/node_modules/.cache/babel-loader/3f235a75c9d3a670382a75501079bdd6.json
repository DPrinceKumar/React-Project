{"ast":null,"code":"var _jsxFileName = \"/Users/princekumar/Desktop/web devlopment /Com-React-2022/rest-app/src/component/toDoList/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"./style.css\"; // get the localStorage data back\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalData = () => {\n  const lists = localStorage.getItem(\"mytodolist\");\n\n  if (lists) {\n    return JSON.parse(lists);\n  } else {\n    return [];\n  }\n};\n\nconst Todo = () => {\n  const [inputdata, setInputData] = useState(\"\");\n  console.log('object :', inputdata);\n  const [items, setItems] = useState(getLocalData());\n  const [isEditItem, setIsEditItem] = useState(\"\");\n  const [toggleButton, setToggleButton] = useState(false); // add the items fucnction\n\n  const addItem = () => {\n    if (!inputdata) {\n      alert(\"plz fill the data\");\n    } //  else if (inputdata && toggleButton) {\n    //   setItems(\n    //     items.map((curElem) => {\n    //       if (curElem.id === isEditItem) {\n    //         return { ...curElem, name: inputdata };\n    //       }\n    //       return curElem;\n    //     })\n    //   );\n    //   setInputData(\"\");\n    //   setIsEditItem(null);\n    //   setToggleButton(false);\n    // }\n    else {\n      const myNewInputData = {\n        id: new Date().getTime().toString(),\n        name: inputdata\n      };\n      setItems([...items, myNewInputData]);\n      setInputData(\"\");\n    }\n  }; //edit the items\n  //   const editItem = (index) => {\n  //     const item_todo_edited = items.find((curElem) => {\n  //       return curElem.id === index;\n  //     });\n  //     setInputData(item_todo_edited.name);\n  //     setIsEditItem(index);\n  //     setToggleButton(true);\n  //   };\n  // how to delete items section\n  //   const deleteItem = (index) => {\n  //     const updatedItems = items.filter((curElem) => {\n  //       return curElem.id !== index;\n  //     });\n  //     setItems(updatedItems);\n  //   };\n  // remove all the elements\n  //   const removeAll = () => {\n  //     setItems([]);\n  //   };\n  // adding localStorage\n  //   useEffect(() => {\n  //     localStorage.setItem(\"mytodolist\", JSON.stringify(items));\n  //   }, [items]);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/todo.svg\",\n            alt: \"todologo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add Your List Here \\u270C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u270D Add Item\",\n            className: \"form-control\",\n            value: inputdata,\n            onChange: event => setInputData(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), toggleButton ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-edit add-btn\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add-btn\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(curElem => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Hello\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-edit add-btn\",\n                  onClick: () => editItem(curElem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-trash-alt add-btn\",\n                  onClick: () => curElem.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/princekumar/Desktop/web devlopment /Com-React-2022/rest-app/src/component/toDoList/todo.js"],"names":["React","useState","useEffect","getLocalData","lists","localStorage","getItem","JSON","parse","Todo","inputdata","setInputData","console","log","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","alert","myNewInputData","id","Date","getTime","toString","name","event","target","value","map","curElem","editItem"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport \"./style.css\"\n\n// get the localStorage data back\nconst getLocalData = () => {\n  const lists = localStorage.getItem(\"mytodolist\");\n\n  if (lists) {\n    return JSON.parse(lists);\n  } else {\n    return [];\n  }\n};\n\nconst Todo = () => {\n    const [inputdata, setInputData] = useState(\"\");\n    console.log('object :', inputdata);\n  const [items, setItems] = useState(getLocalData());\n  const [isEditItem, setIsEditItem] = useState(\"\");\n  const [toggleButton, setToggleButton] = useState(false);\n\n  // add the items fucnction\n  const addItem = () => {\n    if (!inputdata) {\n      alert(\"plz fill the data\");   }\n    //  else if (inputdata && toggleButton) {\n    //   setItems(\n    //     items.map((curElem) => {\n    //       if (curElem.id === isEditItem) {\n    //         return { ...curElem, name: inputdata };\n    //       }\n    //       return curElem;\n    //     })\n    //   );\n\n    //   setInputData(\"\");\n    //   setIsEditItem(null);\n    //   setToggleButton(false);\n    // }\n    else {\n      const myNewInputData = {\n        id: new Date().getTime().toString(),\n        name: inputdata,\n      };\n      setItems([...items, myNewInputData]);\n      setInputData(\"\");\n    }\n  };\n  //edit the items\n//   const editItem = (index) => {\n//     const item_todo_edited = items.find((curElem) => {\n//       return curElem.id === index;\n//     });\n//     setInputData(item_todo_edited.name);\n//     setIsEditItem(index);\n//     setToggleButton(true);\n//   };\n\n  // how to delete items section\n//   const deleteItem = (index) => {\n//     const updatedItems = items.filter((curElem) => {\n//       return curElem.id !== index;\n//     });\n//     setItems(updatedItems);\n//   };\n\n  // remove all the elements\n//   const removeAll = () => {\n//     setItems([]);\n//   };\n\n  // adding localStorage\n//   useEffect(() => {\n//     localStorage.setItem(\"mytodolist\", JSON.stringify(items));\n//   }, [items]);\n\n    return (\n        <>\n        <div className=\"main-div\">\n        <div className=\"child-div\">\n          <figure>\n            <img src=\"./images/todo.svg\" alt=\"todologo\" />\n            <figcaption>Add Your List Here ✌</figcaption>\n          </figure>\n          <div className=\"addItems\">\n            <input  type=\"text\" placeholder=\"✍ Add Item\" className=\"form-control\" value={inputdata}\n              onChange={(event) => setInputData(event.target.value)}    />\n            {toggleButton ? (\n              <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\n            ) : (\n              <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\n            )}\n          </div>\n\n          {/* show our items  */}\n          <div className=\"showItems\">\n              {items.map(   (curElem)   =>{\n                  return(\n                <div className=\"eachItem\" >\n                  <h3>Hello</h3>\n                  <div className=\"todo-btn\">\n                  <i\n                      className=\"far fa-edit add-btn\"\n                      onClick={() => editItem(curElem.id)}></i>\n                    <i\n                      className=\"far fa-trash-alt add-btn\"\n                      onClick={() => (curElem.id)}></i>\n                    </div>\n                </div>\n                  );\n              })}\n\n            {/* {items.map((curElem) => {\n              return (\n                <div className=\"eachItem\" key={curElem.id}>\n                  <h3>{curElem.name}</h3>\n                  <div className=\"todo-btn\">\n                     <i\n                      className=\"far fa-edit add-btn\"\n                      onClick={() => editItem(curElem.id)}></i>\n                    <i\n                      className=\"far fa-trash-alt add-btn\"\n                      onClick={() => deleteItem(curElem.id)}></i>\n                  </div>\n                </div>\n              );\n            })} */}\n\n          </div>\n\n          {/* rmeove all button  */}\n          <div className=\"showItems\">\n            {/* <button\n              className=\"btn effect04\"\n              data-sm-link-text=\"Remove All\"\n              onClick={removeAll}>\n              <span> CHECK LIST</span>\n            </button> */}\n          </div>\n        </div>\n      </div>\n        </>\n    )\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}